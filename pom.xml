<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.openphacts.data</groupId>
  <artifactId>ops-hgnc-linkset</artifactId>
  <version>0.0.20160407-SNAPSHOT</version>
  <packaging>data</packaging>
  <name>Open PHACTS HGNC id to HGNC symbol linkset</name>
  <url>https://github.com/openphacts/ops-hgnc-linksets</url>
  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
  </properties>
  <scm>
    <connection>scm:git:https://github.com/openphacts/ops-hgnc-linksets.git</connection>
    <developerConnection>scm:git:git@github.com:openphacts/ops-hgnc-linksets.git</developerConnection>
    <url>https://github.com/openphacts/ops-hgnc-linksets</url>
    <tag>HEAD</tag>
  </scm>

  <licenses>
    <license>
      <name>Creative Commons Attribution-ShareAlike 4.0 International</name>
      <url>http://creativecommons.org/licenses/by-sa/4.0/</url>
	<comments>
Derived from HGNC data from 
HUGO Gene Nomenclature Committee at the European Bioinformatics Institute. 
See http://www.genenames.org/about/overview
</comments>
    </license>
  </licenses>
  <build>
    <plugins>
      <plugin>
        <groupId>no.s11.dataplugin</groupId>
          <artifactId>data-maven-plugin</artifactId>
          <version>0.0.6</version>
          <extensions>true</extensions>
      </plugin>
      <plugin>
        <groupId>io.fabric8</groupId>
        <artifactId>docker-maven-plugin</artifactId>
        <version>0.14.2</version>
        <configuration>
          <verbose>true</verbose>
          <images>
            <image>
              <name>appropriate/curl</name>
              <alias>curl</alias>
              <run>
                <cmd><arg>sh</arg><arg>/target/classes/extractHgncLinkset.sh</arg></cmd>
                <volumes>
                  <bind>
                    <volume>${project.build.directory}:/target</volume>
                  </bind>
                </volumes>
                <wait>
                  <log>^DONE</log>
                </wait>
                <log />
              </run>
            </image>
          </images>
        </configuration>
        <executions>
           <execution>
              <id>start</id>
              <phase>process-resources</phase>
              <goals><goal>start</goal></goals>
            </execution>
            <!--
              <execution>
                 <id>stop</id>
                 <phase>compile</phase>
                 <goals><goal>stop</goal></goals>
               </execution>
           -->
          </executions>
      </plugin>
              <plugin>
                  <groupId>com.alexecollins.maven.plugin</groupId>
                  <artifactId>script-maven-plugin</artifactId>
                  <version>1.0.0</version>
                  <configuration>
                    <language>beanshell</language>
                    <script><![CDATA[
                      import org.apache.jena.rdf.model.*;
                      import org.apache.jena.riot.*;
                      import org.apache.jena.vocabulary.RDF;

                      dataDir = new File(project.getBuild().getOutputDirectory(), "data");
                      voidFile = new File(dataDir, "void.ttl");

                      System.out.println("Testing " + voidFile);
                      if (! voidFile.isFile()) {
                        throw new Exception("Missing void file: " + voidFile);
                      }
                      voidModel = RDFDataMgr.loadModel(voidFile.getAbsolutePath(), Lang.TURTLE);

                      linksetType = voidModel.createResource("http://rdfs.org/ns/void#Linkset");
                      tripleProp = voidModel.createProperty("http://rdfs.org/ns/void#", "triples");

                      linkset = voidModel.listSubjectsWithProperty(RDF.type, linksetType).nextResource();
                      System.out.println("Linkset: " + linkset);
                      triples = voidModel.getRequiredProperty(linkset, tripleProp).getLong();
                      System.out.println("void:triples " + triples);

                      linksetFile = new File(dataDir, "hgnc-to-hgnc.symbol-linkset.ttl");

                      System.out.println("Testing " + linksetFile);
                      if (! linksetFile.isFile()) {
                        throw new Exception("Missing linkset file: " + linksetFile);
                      }
                      linksetModel = RDFDataMgr.loadModel(linksetFile.getAbsolutePath(), Lang.TURTLE);
                      actualTriples = linksetModel.size();
                      System.out.println("linkset triples: " + linksetModel.size());

                      // Should be the same, +/- 10 for some metadata
                      if (triples - 10 > actualTriples || triples + 10 < actualTriples) {
                        throw new Exception("void:triples " + triples + " does not match linkset triple count " + actualTriples);
                      }
                      System.out.println("OK");
                    ]]></script>
                  </configuration>
                  <executions>
                    <execution>
                      <phase>package</phase>
                      <goals>
                          <goal>execute</goal>
                      </goals>
                    </execution>
                  </executions>
                  <dependencies>
                    <dependency>
                      <groupId>org.apache-extras.beanshell</groupId>
                      <artifactId>bsh</artifactId>
                      <version>2.0b6</version>
                    </dependency>
                    <dependency>
                      <groupId>org.apache.jena</groupId>
                      <artifactId>jena-arq</artifactId>
                      <version>3.0.1</version>
                    </dependency>
                  </dependencies>
              </plugin>
    </plugins>
  </build>

  <pluginRepositories>
    <pluginRepository>
      <id>bintray-stain-maven</id>
      <name>bintray-plugins</name>
      <url>http://dl.bintray.com/stain/maven</url>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </pluginRepository>
  </pluginRepositories>


  <distributionManagement>
    <repository>
        <id>b6e18a12df08</id>
        <name>b6e18a12df08-releases</name>
        <url>http://data.openphacts.org/artifactory/data-maven</url>
    </repository>
    <snapshotRepository>
        <id>b6e18a12df08</id>
        <name>b6e18a12df08-snapshots</name>
        <url>http://data.openphacts.org/artifactory/data-maven-dev</url>
    </snapshotRepository>
  </distributionManagement>


  <repositories>
    <repository>
      <id>ops-data</id>
      <name>Open PHACTS data repository</name>
      <url>http://data.openphacts.org/artifactory/data-maven</url>
      <releases />
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </repository>
    <repository>
      <id>ops-data-dev</id>
      <name>Open PHACTS data snapshot repository</name>
      <url>http://data.openphacts.org/artifactory/data-maven-dev</url>
      <releases>
        <enabled>false</enabled>
      </releases>
      <snapshots />
    </repository>
  </repositories>

</project>
